(function(a) {
    a(["jquery"], function(b) {
        return (function() {
            var p;
            var e;
            var y = 0;
            var c = {
                error: "danger",
                info: "info",
                success: "success",
                warning: "warning",
                activity: "activity"
            };
            var w = {
                clear: n,
                remove: x,
                error: r,
                getContainer: t,
                info: v,
                options: {},
                subscribe: i,
                success: g,
                version: "2.1.0",
                warning: q,
                activity: d
            };
            var h;
            return w;

            function r(A, B, z) {
                return m({
                    type: c.error,
                    iconClass: k().iconClasses.error,
                    message: A,
                    optionsOverride: z,
                    title: B
                })
            }

            function t(z, A) {
                if (!z) {
                    z = k()
                }
                p = b("#" + z.containerId);
                if (p.length) {
                    return p
                }
                if (A) {
                    p = f(z)
                }
                return p
            }

            function v(A, B, z) {
                return m({
                    type: c.info,
                    iconClass: k().iconClasses.info,
                    message: A,
                    optionsOverride: z,
                    title: B
                })
            }

            function i(z) {
                e = z
            }

            function g(A, B, z) {
                return m({
                    type: c.success,
                    iconClass: k().iconClasses.success,
                    message: A,
                    optionsOverride: z,
                    title: B
                })
            }

            function q(A, B, z) {
                return m({
                    type: c.warning,
                    iconClass: k().iconClasses.warning,
                    message: A,
                    optionsOverride: z,
                    title: B
                })
            }

            function d(A, B, z) {
                return m({
                    type: c.activity,
                    iconClass: k().iconClasses.activity,
                    message: A,
                    optionsOverride: z,
                    title: B
                })
            }

            function n(z) {
                var A = k();
                if (!p) {
                    t(A)
                }
                if (!u(z, A)) {
                    o(A)
                }
            }

            function x(z) {
                var A = k();
                if (!p) {
                    t(A)
                }
                if (z && b(":focus", z).length === 0) {
                    l(z);
                    return
                }
                if (p.children().length) {
                    p.remove()
                }
            }

            function o(z) {
                var B = p.children();
                for (var A = B.length - 1; A >= 0; A--) {
                    u(b(B[A]), z)
                }
            }

            function u(z, A) {
                if (z && b(":focus", z).length === 0) {
                    z[A.hideMethod]({
                        duration: A.hideDuration,
                        easing: A.hideEasing,
                        complete: function() {
                            l(z)
                        }
                    });
                    z.animateIt('slideOutDown');
                    return true
                }
                return false
            }

            function f(z) {
                p = b("<div/>").attr("id", z.containerId).addClass(z.positionClass).attr("aria-live", "polite").attr("role", "alert");
                p.appendTo(b(z.target));
                return p
            }

            function j() {
                return {
                    tapToDismiss: true,
                    toastClass: "toast",
                    containerId: "toast-container",
                    debug: false,
                    showMethod: "fadeIn",
                    showDuration: 300,
                    showEasing: "swing",
                    onShown: undefined,
                    hideMethod: "fadeOut",
                    hideDuration: 1000,
                    hideEasing: "swing",
                    onHidden: undefined,
                    extendedTimeOut: 1000,
                    iconClasses: {
                        error: "toast-error",
                        info: "toast-info",
                        success: "toast-success",
                        warning: "toast-warning",
                        activity: "toast-activity"
                    },
                    iconClass: "toast-info",
                    positionClass: "toast-top-right",
                    timeOut: 5000,
                    titleClass: "toast-title",
                    messageClass: "toast-message",
                    target: "body",
                    closeHtml: "<button>&times;</button>",
                    newestOnTop: true,
                    preventDuplicates: false
                }
            }

            function s(z) {
                if (!e) {
                    return
                }
                e(z)
            }

            function m(A) {
                var K = k(),
                    H = A.iconClass || K.iconClass;
                if (K.preventDuplicates) {
                    if (A.message === h) {
                        return
                    } else {
                        h = A.message
                    }
                }
                if (typeof(A.optionsOverride) !== "undefined") {
                    K = b.extend(K, A.optionsOverride);
                    H = A.optionsOverride.iconClass || H
                }
                y++;
                p = t(K, true);
                var J = null,
                    D = b("<div/>"),
                    F = b("<div/>"),
                    z = b("<div/>"),
                    G = b(K.closeHtml),
                    E = {
                        toastId: y,
                        state: "visible",
                        startTime: new Date(),
                        options: K,
                        map: A
                    };
                if (A.iconClass) {
                	/*console.log(A);
                	console.log(D);
                	console.log(K.toastClass);
                	console.log(H);*/
                    D.addClass(K.toastClass).addClass(H).animateIt('slideInUp');
                }
                if (A.title) {
                    F.append(A.title).addClass(K.titleClass);
                    D.append(F)
                }
                if (A.message) {
                    z.append(A.message).addClass(K.messageClass);
                    D.append(z)
                }
                if (K.closeButton) {
                    G.addClass("toast-close-button").attr("role", "button");
                    D.prepend(G)
                }
                D.hide();
                if (K.newestOnTop) {
                    p.prepend(D)
                } else {
                    p.append(D)
                }
                D[K.showMethod]({
                    duration: K.showDuration,
                    easing: K.showEasing,
                    complete: K.onShown
                });
                if (K.timeOut > 0) {
                    J = setTimeout(C, K.timeOut)
                }
                if (!K.hover) {
                    D.hover(B, I);
                }
                if (!K.onclick && K.tapToDismiss) {
                    D.click(C)
                }
                if (K.closeButton && G) {
                    G.click(function(L) {
                        if (L.stopPropagation) {
                            L.stopPropagation()
                        } else {
                            if (L.cancelBubble !== undefined && L.cancelBubble !== true) {
                                L.cancelBubble = true
                            }
                        }
                        C(true)
                    })
                }
                if (K.onclick) {
                    D.click(function() {
                        if (K.onclick()) {
                            C()
                        }
                    })
                }
                s(E);
                if (K.debug && console) {
                    console.log(E)
                }
                return D;

                function C(L) {
                    if (b(":focus", D).length && !L) {
                        return
                    }
                    return D[K.hideMethod]({
                        duration: K.hideDuration,
                        easing: K.hideEasing,
                        complete: function() {
                            l(D);
                            if (K.onHidden && E.state !== "hidden") {
                                K.onHidden()
                            }
                            E.state = "hidden";
                            E.endTime = new Date();
                            s(E)
                        }
                    });
                    D.animateIt('slideOutDown');
                }

                function I() {
                    if (K.timeOut > 0 || K.extendedTimeOut > 0) {
                        J = setTimeout(C, K.extendedTimeOut)
                    }
                }

                function B() {
                    clearTimeout(J);
                    D.stop(true, true)[K.showMethod]({
                        duration: K.showDuration,
                        easing: K.showEasing
                    })
                }
            }

            function k() {
                return b.extend({}, j(), w.options)
            }

            function l(z) {
                if (!p) {
                    p = t()
                }
                if (z.is(":visible")) {
                    return
                }
                z.remove();
                z = null;
                if (p.children().length === 0) {
                    p.remove()
                }
            }
        })()
    })
}(typeof define === "function" && define.amd ? define : function(b, a) {
    if (typeof module !== "undefined" && module.exports) {
        module.exports = a(require("jquery"))
    } else {
        window.toastr = a(window.jQuery)
    }
}));